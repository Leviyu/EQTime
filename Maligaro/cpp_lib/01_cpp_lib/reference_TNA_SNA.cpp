#include "hongyulibcpp.h"


using namespace std;

double reference_TNA_SNA(double depth)
{
	double vs;
	vs = 0 ;


	int LINE = 221;
	
	
	double radius[1000] = {
6371.0000,
6367.5000,
6367.0000,
6365.0000,
6355.0000,
6341.0000,
6337.0000,
6335.0000,
6271.0000,
6246.0000,
6196.0000,
6173.0000,
6171.0000,
6121.0000,
6096.0000,
6085.0000,
6071.0000,
6046.0000,
6035.0000,
6021.0000,
5996.0000,
5981.2000,
5976.0000,
5957.0000,
5955.0000,
5946.0000,
5923.3000,
5921.0000,
5896.0000,
5871.0000,
5861.3000,
5846.0000,
5821.0000,
5796.0000,
5795.4000,
5771.0000,
5746.0000,
5726.0000,
5725.4000,
5717.0000,
5715.0000,
5696.0000,
5671.0000,
5651.5000,
5646.0000,
5621.0000,
5596.0000,
5573.5000,
5571.0000,
5546.0000,
5521.0000,
5496.0000,
5491.6000,
5471.0000,
5446.0000,
5421.0000,
5405.7000,
5396.0000,
5371.0000,
5346.0000,
5321.0000,
5315.8000,
5296.0000,
5271.0000,
5246.0000,
5221.9000,
5221.0000,
5208.5000,
5196.0000,
5183.5000,
5171.0000,
5158.5000,
5146.0000,
5133.5000,
5124.0000,
5121.0000,
5108.5000,
5096.0000,
5083.5000,
5071.0000,
5058.5000,
5046.0000,
5033.5000,
5022.1000,
5021.0000,
5008.5000,
4996.0000,
4983.5000,
4971.0000,
4958.5000,
4946.0000,
4933.5000,
4921.0000,
4916.2000,
4908.5000,
4896.0000,
4883.5000,
4871.0000,
4858.5000,
4846.0000,
4833.5000,
4821.0000,
4808.5000,
4806.4000,
4796.0000,
4783.5000,
4771.0000,
4758.5000,
4746.0000,
4733.5000,
4721.0000,
4708.5000,
4696.0000,
4692.5000,
4683.5000,
4671.0000,
4658.5000,
4646.0000,
4633.5000,
4621.0000,
4608.5000,
4596.0000,
4583.5000,
4574.7000,
4571.0000,
4558.5000,
4546.0000,
4533.5000,
4521.0000,
4508.5000,
4496.0000,
4483.5000,
4471.0000,
4458.5000,
4452.9000,
4446.0000,
4433.5000,
4421.0000,
4408.5000,
4396.0000,
4383.5000,
4371.0000,
4358.5000,
4346.0000,
4333.5000,
4327.1000,
4321.0000,
4308.5000,
4296.0000,
4283.5000,
4271.0000,
4258.5000,
4246.0000,
4233.5000,
4221.0000,
4208.5000,
4197.3000,
4196.0000,
4183.5000,
4171.0000,
4158.5000,
4146.0000,
4133.5000,
4121.0000,
4108.5000,
4096.0000,
4083.5000,
4071.0000,
4063.6000,
4058.5000,
4046.0000,
4033.5000,
4021.0000,
4008.5000,
3996.0000,
3983.5000,
3971.0000,
3958.5000,
3946.0000,
3933.5000,
3926.0000,
3921.0000,
3908.5000,
3896.0000,
3883.5000,
3871.0000,
3858.5000,
3846.0000,
3833.5000,
3821.0000,
3808.5000,
3796.0000,
3784.3000,
3783.5000,
3771.0000,
3758.5000,
3746.0000,
3733.5000,
3721.0000,
3708.5000,
3696.0000,
3683.5000,
3671.0000,
3658.5000,
3646.0000,
3638.5000,
3633.5000,
3621.0000,
3608.5000,
3596.0000,
3583.5000,
3571.0000,
3559.6000,
3548.2000,
3536.9000,
3525.5000,
3514.1000,
3502.8000,
3491.4000,
3489.0000,
3480.0000
	};

	double velocity[1000] = {
3.2000,
3.2000,
3.6500,
3.6567,
3.6900,
3.7366,
3.7500,
4.6000,
4.6000,
4.5000,
4.5000,
4.4817,
4.4800,
4.4800,
4.5100,
4.5360,
4.5700,
4.6300,
4.6516,
4.6800,
4.7300,
4.7595,
4.7700,
4.8100,
5.0500,
5.0700,
5.1064,
5.1100,
5.1500,
5.1900,
5.2132,
5.2500,
5.2900,
5.3300,
5.3315,
5.3900,
5.4500,
5.5200,
5.5265,
5.6200,
5.8300,
5.9500,
6.0700,
6.1247,
6.1400,
6.1900,
6.2200,
6.2380,
6.2400,
6.2600,
6.2790,
6.2960,
6.2990,
6.3130,
6.3300,
6.3460,
6.3564,
6.3630,
6.3800,
6.3960,
6.4110,
6.4143,
6.4270,
6.4430,
6.4580,
6.4734,
6.4740,
6.4810,
6.4890,
6.4970,
6.5040,
6.5110,
6.5180,
6.5250,
6.5303,
6.5320,
6.5390,
6.5470,
6.5540,
6.5610,
6.5680,
6.5750,
6.5820,
6.5884,
6.5890,
6.5960,
6.6030,
6.6100,
6.6170,
6.6240,
6.6300,
6.6370,
6.6430,
6.6457,
6.6500,
6.6570,
6.6640,
6.6700,
6.6770,
6.6830,
6.6900,
6.6960,
6.7030,
6.7040,
6.7090,
6.7160,
6.7220,
6.7280,
6.7340,
6.7410,
6.7470,
6.7530,
6.7590,
6.7610,
6.7660,
6.7720,
6.7780,
6.7840,
6.7900,
6.7960,
6.8030,
6.8090,
6.8150,
6.8192,
6.8210,
6.8270,
6.8330,
6.8390,
6.8450,
6.8500,
6.8560,
6.8620,
6.8680,
6.8730,
6.8757,
6.8790,
6.8850,
6.8910,
6.8960,
6.9020,
6.9080,
6.9140,
6.9190,
6.9250,
6.9310,
6.9341,
6.9370,
6.9420,
6.9480,
6.9540,
6.9600,
6.9650,
6.9710,
6.9770,
6.9830,
6.9880,
6.9934,
6.9940,
6.9990,
7.0050,
7.0100,
7.0160,
7.0210,
7.0270,
7.0320,
7.0380,
7.0430,
7.0490,
7.0525,
7.0550,
7.0600,
7.0650,
7.0710,
7.0770,
7.0830,
7.0890,
7.0940,
7.0990,
7.1050,
7.1100,
7.1136,
7.1160,
7.1220,
7.1270,
7.1320,
7.1380,
7.1430,
7.1490,
7.1550,
7.1610,
7.1660,
7.1710,
7.1757,
7.1760,
7.1820,
7.1910,
7.2000,
7.2220,
7.2450,
7.2670,
7.2900,
7.2870,
7.2850,
7.2830,
7.2800,
7.2782,
7.2770,
7.2750,
7.2730,
7.2700,
7.2670,
7.2650,
7.2640,
7.2630,
7.2610,
7.2600,
7.2590,
7.2570,
7.2560,
7.2558,
7.2550
	};


	double tmp_radius = 6371 - depth;

	if( tmp_radius > 6371 || tmp_radius < 3480 ) 
		cout <<"ERROR in reference_TNA_SNA"<< endl;

	// we interpolate between two points to get the value of current depth
	int count;
	double old_velocity;
	double old_radius;
	old_radius = 6371;
	old_velocity = 3.2;
	for(count = 0; count < LINE ; count++)
	{
		double current_radius = 6371 - depth;

		double the_radius = radius[count];
		double the_velocity = velocity[count];

		if( current_radius > the_radius ) 
		{
			//cout << "old rad vel "<< old_radius << " " << old_velocity << endl;
			//cout << "the rad vel "<< the_radius << " " << the_velocity << endl;
			vs = old_velocity + (current_radius - old_radius)*( the_velocity - old_velocity) / ( the_radius- old_radius);
			//cout << "current rad " << current_radius << " "  << vs << endl;

			break;
		}
		old_radius = the_radius;
		old_velocity = the_velocity;

	}









	return vs;

}
